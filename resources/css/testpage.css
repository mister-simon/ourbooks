.testpage {
    /* Ensure full screen coverage */
    &,
    body {
        min-height: 100vh;
    }

    body {
        /* Grid stuff */
        display: grid;
    }
}

.content-grid {
    display: grid;

    grid-template-columns:
        [full-width-start]
        minmax(0, 1rem)
        [full-width-content-start]
        minmax(0rem, 0.25fr)
        [breakout-start left-breakout-start]
        minmax(0rem, 0.75fr)
        [content-start left-start]
        min(50% - 1rem, 40ch)
        [left-end left-breakout-end right-start right-breakout-start]
        min(50% - 1rem, 40ch)
        [content-end right-end]
        minmax(0rem, 0.75fr)
        [breakout-end right-breakout-end]
        minmax(0rem, 0.25fr)
        [full-width-content-end]
        minmax(0, 1rem)
        [full-width-end];

    & > * {
        grid-column: content;
    }

    & > .full-width {
        grid-column: full-width;
    }

    & > .breakout {
        grid-column: breakout;
    }

    & > .breakout-left {
        grid-column: left-breakout / content-end;
    }
    & > .breakout-right {
        grid-column: content-start / right-breakout-end;
    }

    @screen sm {
        & > .left {
            grid-column: left;

            &.breakout {
                grid-column: left-breakout;
            }
        }
        & > .right {
            grid-column: right;

            &.breakout {
                grid-column: right-breakout;
            }
        }
    }
}

.tile-test {
    grid-template-columns:
        [i1-start]
        1.5fr
        [i2-start i3-start]
        1.5fr
        [i1-end]
        1.5fr
        [i2-end i3-end];

    grid-template-rows:
        [i1-start i2-start]
        1fr
        [i2-end i3-start]
        1fr
        [i1-end i3-end];

    @apply grid aspect-video isolate transition-all;

    &:has(div:nth-child(1):hover) {
        grid-template-columns:
            [i1-start]
            1fr
            [i2-start i3-start]
            1fr
            [i1-end]
            0fr
            [i2-end i3-end];
    }

    &:has(div:nth-child(2):hover, div:nth-child(3):hover) {
        grid-template-columns:
            [i1-start]
            0.5fr
            [i2-start i3-start]
            1.5fr
            [i1-end]
            3fr
            [i2-end i3-end];
    }

    &:has(div:nth-child(2):hover) {
        grid-template-rows:
            [i1-start i2-start]
            3fr
            [i2-end i3-start]
            1fr
            [i1-end i3-end];
    }

    &:has(div:nth-child(3):hover) {
        grid-template-rows:
            [i1-start i2-start]
            1fr
            [i2-end i3-start]
            3fr
            [i1-end i3-end];
    }

    & > * {
        @apply overflow-hidden grid relative;
        img {
            @apply absolute inset-0 h-full w-full object-cover;
        }
    }

    & > :nth-child(1) {
        grid-area: i1;
        z-index: 3;

        clip-path: polygon(0 0, 100% 0, 50% 100%, 0 100%);
    }
    & > :nth-child(2) {
        grid-area: i2;
        z-index: 2;

        /* clip-path: polygon(33.33% 0%, 100% 0%, 100% 100%, 16.66% 100%); */
    }
    & > :nth-child(3) {
        grid-area: i3;
        z-index: 1;

        /* clip-path: polygon(16.66% 0%, 100% 0%, 100% 100%, 0% 100%); */
    }
}
